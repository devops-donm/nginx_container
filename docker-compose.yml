services:
  flask_app_01:
    build:
      context: ./flask_project
    container_name: flask_app
    ports:
      - "5000:5000"  # Expose Flask app on host's port 5000
    command: gunicorn --bind 0.0.0.0:5000 --workers 3 app:app
    restart: always  # Ensure the app service restarts on failure/reboot
    networks:
      app_network:
        ipv4_address: 172.18.0.2  # Static IP for Flask app

  django_app_01:
    build:
      context: ./django_project
    container_name: django_app
    ports:
      - "5001:5001"  # Expose Django app on host's port 5001
    command: gunicorn --bind 0.0.0.0:5001 --workers 3 core.wsgi:application
    restart: always  # Ensure the app service restarts on failure/reboot
    networks:
      app_network:
        ipv4_address: 172.18.0.3  # Static IP for Django app

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"  # Expose NGINX on host's port 80
    depends_on:
      - flask_app_01  # Ensure NGINX waits for Flask to be ready
      - django_app_01  # Ensure NGINX waits for Django to be ready
    networks:
      - app_network  # Connect nginx service to the shared network
    restart: always  # Ensure the nginx service restarts on failure/reboot

networks:
  app_network:
    driver: bridge  # Use a bridge network for internal communication
    ipam:
      config:
        - subnet: 172.18.0.0/16  # Define custom subnet for IPs
